version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0
  node: circleci/node@4.0.0

jobs:
  build-and-push-backend:
    working_directory: ~/majorproject-2-thurs-18-30-5/BackEnd
    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - checkout:
          path: ~/majorproject-2-thurs-18-30-5
      - setup_remote_docker
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest"' >> $BASH_ENV


      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
            # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-initial-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
              - ~/.m2
          key: circleci-initial-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
            # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
            path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
            # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
            path: target/initial-0.0.1-SNAPSHOT.jar
        # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME

  update-backend:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
      - run:
          name: Update the existing backend service
          command: |
              aws ecs update-service --cluster sept-backend-cluster --service update-backend --force-new-deployment

  build-frontend:
    docker:
      - image: circleci/node:12

    working_directory: ~/majorproject-2-thurs-18-30-5/FrontEnd/agme-app

    steps:
      - checkout:
          path: ~/majorproject-2-thurs-18-30-5

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm test

workflows:
  build-backend-qa:
    jobs:
      - build-and-push-backend:
          filters:
            branches:
              only: develop
      - update-backend:
          requires:
            - build-and-push-backend
          filters:
            branches:
              only: develop

  build-frontend-qa:
    jobs:
      - build-frontend:
          filters:
            branches:
              only: develop
